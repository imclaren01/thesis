@article{lawler1972procedure,
 ISSN = {00251909, 15265501},
 URL = {http://www.jstor.org/stable/2629357},
 abstract = {A general procedure is presented for computing the best, 2nd best, ⋯, Kth best solutions to a given discrete optimization problem. If the number of computational steps required to find an optimal solution to a problem with n(0, 1) variables is c(n), then the amount of computation required to obtain the K best solutions is O(Knc(n)). The procedure specializes to published procedures of Murty and of Yen for the assignment problem and the shortest path problem, respectively. A method is presented for reducing the required amount of storage by a factor of n, compared with the algorithms of Murty and of Yen. It is shown how the K shortest (loopless) paths in an n-node network with positive and negative arcs can be computed with an amount of computation which is O(Kn3). This represents an improvement by a factor of n, compared with Yen's algorithm.},
 author = {Eugene L. Lawler},
 journal = {Management Science},
 number = {7},
 pages = {401--405},
 publisher = {INFORMS},
 title = {A Procedure for Computing the K Best Solutions to Discrete Optimization Problems and Its Application to the Shortest Path Problem},
 urldate = {2024-04-10},
 volume = {18},
 year = {1972}
}

@book{CLRS,
author    = {Thomas H. Cormen and Charles E. Leiserson and Ronald L. Rivest and Clifford Stein},
title     = {Introduction to Algorithms},
publisher = {The MIT Press},
year      = {2022},
edition   = {4th},
isbn      = {978-0262046305}
}
@article{murty1968letter,
  title={Letter to the editor—An algorithm for ranking all the assignments in order of increasing cost},
  author={Murty, Katta G},
  journal={Operations research},
  volume={16},
  number={3},
  pages={682--687},
  year={1968},
  publisher={INFORMS}
}


@article{gabow1977finding,
  title={Two algorithms for generating weighted spanning trees in order},
  author={Gabow, Harold N},
  journal={SIAM Journal on Computing},
  volume={6},
  number={1},
  pages={139--150},
  year={1977},
  publisher={SIAM}
}

@article{katoh1981efficient,
  title={An efficient algorithm for K shortest simple paths},
  author={Katoh, Naoki and Ibaraki, Toshihide and Mine, Hisashi},
  journal={Networks},
  volume={12},
  number={4},
  pages={411--427},
  year={1981},
  publisher={Wiley Online Library}
}

@article{frederickson1993ambivalent,
  title={Ambivalent data structures for dynamic 2-edge-connectivity and $k$ smallest spanning trees},
  author={Frederickson, Greg N},
  journal={SIAM Journal on Computing},
  volume={26},
  number={2},
  pages={484--538},
  year={1993},
  publisher={SIAM}
}
@article{frederickson1993optimal,
title = {An Optimal Algorithm for Selection in a Min-Heap},
journal = {Information and Computation},
volume = {104},
number = {2},
pages = {197-214},
year = {1993},
issn = {0890-5401},
doi = {https://doi.org/10.1006/inco.1993.1030},
url = {https://www.sciencedirect.com/science/article/pii/S0890540183710308},
author = {G.N. Frederickson},
abstract = {An O(k)-time algorithm is presented for selecting the kth smallest element in a binary min-heap of size n⪢k. The approach uses recursively defined data structures that impose a hierarchical grouping on certain elements in the heap. The result establishes a further example of a partial order for which the kth smallest element can be determined in time proportional to the information theory lower bound. Two applications, to a resource allocation problem and to the enumeration of the k smallest spanning trees, are identified.}
}


@article{hershberger2007finding,
  title={Finding the $k$ shortest simple paths: A new algorithm and its implementation},
  author={Hershberger, John and Maxel, Matthew and Suri, Subhash},
  journal={ACM Transactions on Algorithms (TALG)},
  volume={3},
  number={4},
  pages={45},
  year={2007},
  publisher={ACM New York, NY, USA}
}

@incollection{jacobson2011efficient,
  title={Heaviest increasing/common subsequence problems},
  author={Jacobson, Guy and Vo, Kiem-Phong},
  booktitle={Combinatorial Pattern Matching},
  pages={52--66},
  year={2011},
  publisher={Springer}
}

@article{camerini1980complexity,
  title={Ranking arborescences in {$O$}($Km$ log $n$) time},
  author={Camerini, Pier M and Fratta, Luigi and Maffioli, Francesco},
  journal={
European Journal of Operational Research},
  volume={4},
  number={4},
  pages={235--242},
  year={1980},
  publisher={Elsevier}
}
@article{chen2013par,
author    = {Jianer Chen and Iyad A. Kanj and Jia Meng and Ge Xia and Fenghui Zhang},
title     = {Parameterized top-{$K$} algorithms},
journal   = {Theoretical Computer Science},
volume    = {470},
pages     = {105--119},
year      = {2013},
doi       = {10.1016/j.tcs.2012.10.052}
}
@article{avis1996reverse,
  title={Reverse search for enumeration},
  author={Avis, David and Fukuda, Komei},
  journal={Discrete Applied Mathematics},
  volume={65},
  number={1-3},
  pages={21--46},
  year={1996},
  publisher={Elsevier}
}

@article{fukuda1997finding,
  title={Finding all the perfect matchings in bipartite graphs},
  author={Fukuda, Komei and Matsui, Tomomi and Matsui, Sonoko},
  journal={Applied Mathematics Letters},
  volume={7},
  number={1},
  pages={15--18},
  year={1997},
  publisher={Elsevier}
}

@incollection{eppstein2014k,
author="Eppstein, David",
editor="Kao, Ming-Yang",
title="$k$-Best Enumeration",
bookTitle="Encyclopedia of Algorithms",
year="2014",
publisher="Springer US",
address="Boston, MA",
pages="1--4",
isbn="978-3-642-27848-8",
doi="10.1007/978-3-642-27848-8_733-1",
url="https://doi.org/10.1007/978-3-642-27848-8_733-1"
}


@article{hamacher1982k,
  title={$K$ best solutions to combinatorial optimization problems},
  author={Hamacher, Horst W and Queyranne, Maurice},
  journal={Annals of Operations Research},
  volume={4},
  number={1},
  pages={123--143},
  year={1985},
  publisher={Springer}
}

@article{yen2005finding,
  title={Finding the $k$ shortest loopless paths in a network},
  author={Yen, Jin Y},
  journal={Management Science},
  volume={17},
  number={11},
  pages={712--716},
  year={2005},
  publisher={INFORMS}
}

@article{pascoal2013k,
  title={A note on a new variant of Murty's ranking assignments algorithm},
  author={Pascoal, Marta MB and Captivo, Maria Eug{\'e}nia V and Cl{\'i}maco, Jo{\~a}o CN},
  journal={4OR},
  volume={1},
  number={3},
  pages={243--255},
  year={2003},
  publisher={Springer}
}

@book{garey1979computers,
  title={Computers and intractability: a guide to the theory of NP-completeness},
  author={Garey, Michael R and Johnson, David S},
  year={1979},
  publisher={W. H. Freeman}
}

@incollection{karp1972reducibility,
  title={Reducibility among combinatorial problems},
  author={Karp, Richard M},
  booktitle={Complexity of computer computations},
  pages={85--103},
  year={1972},
  publisher={Springer}
}

@inproceedings{cook1971complexity,
  title={The complexity of theorem-proving procedures},
  author={Cook, Stephen A},
  booktitle={Proceedings of the third annual ACM symposium on Theory of computing},
  pages={151--158},
  year={1971}
}

@article{levin1973universal,
  title={Universal sequential search problems},
  author={Levin, Leonid Anatolevich},
  journal={Problemy peredachi informatsii},
  volume={9},
  number={3},
  pages={115--116},
  year={1973}
}

@book{papadimitriou1982complexity,
  title={Combinatorial optimization: algorithms and complexity},
  author={Papadimitriou, Christos H and Steiglitz, Kenneth},
  year={1982},
  publisher={Courier Corporation}
}

@article{tarjan1973enumeration,
  title={Enumeration of the elementary circuits of a directed graph},
  author={Tarjan, Robert E},
  journal={SIAM Journal on Computing},
  volume={2},
  number={3},
  pages={211--216},
  year={1973},
  publisher={SIAM}
}

@article{johnson1975finding,
  title={Finding all the elementary circuits of a directed graph},
  author={Johnson, Donald B},
  journal={SIAM Journal on Computing},
  volume={4},
  number={1},
  pages={77--84},
  year={1975},
  publisher={SIAM}
}

@inproceedings{manjunath2013applications,
  title={Applications of circuit enumeration to biological networks},
  author={Manjunath, BS and Mohan, Ramakrishnan},
  booktitle={2013 IEEE International Workshop on Genomic Signal Processing and Statistics},
  pages={30--33},
  year={2013},
  organization={IEEE}
}

@article{valiant1979complexity,
  title={The complexity of enumeration and reliability problems},
  author={Valiant, Leslie G},
  journal={SIAM Journal on Computing},
  volume={8},
  number={3},
  pages={410--421},
  year={1979},
  publisher={SIAM}
}

@article{jerrum2004polynomial,
  title={A polynomial-time approximation algorithm for the permanent of a matrix with nonnegative entries},
  author={Jerrum, Mark and Sinclair, Alistair and Vigoda, Eric},
  journal={Journal of the ACM (JACM)},
  volume={51},
  number={4},
  pages={671--697},
  year={2004},
  publisher={ACM New York, NY, USA}
}

@book{arora2009computational,
author = {Arora, Sanjeev and Barak, Boaz},
title = {Computational Complexity: A Modern Approach},
year = {2009},
isbn = {0521424267},
publisher = {Cambridge University Press},
address = {USA},
edition = {1st},
abstract = {This beginning graduate textbook describes both recent achievements and classical results of computational complexity theory. Requiring essentially no background apart from mathematical maturity, the book can be used as a reference for self-study for anyone interested in complexity, including physicists, mathematicians, and other scientists, as well as a textbook for a variety of courses and seminars. More than 300 exercises are included with a selected hint set.}
}
@misc{karlin2023slightly,
      title={A (Slightly) Improved Approximation Algorithm for Metric TSP}, 
      author={Anna R. Karlin and Nathan Klein and Shayan Oveis Gharan},
      year={2023},
      eprint={2007.01409},
      archivePrefix={arXiv},
      primaryClass={cs.DS}
}

@techreport{christofides1976worst,
  added-at = {2008-01-10T17:04:02.000+0100},
  author = {Christofides, Nicos},
  biburl = {https://www.bibsonomy.org/bibtex/2107ce5afe4cdd886e5cf863b16533205/jvrb_regulski},
  institution = {Graduate School of Industrial Administration, Carnegie Mellon University},
  interhash = {17c4f6224da4a8ead47972fd788d7556},
  intrahash = {107ce5afe4cdd886e5cf863b16533205},
  keywords = {3(2006)12},
  number = 388,
  timestamp = {2008-01-10T17:06:15.000+0100},
  title = {Worst-case analysis of a new heuristic for the travelling salesman problem},
  type = {Technical Report},
  year = 1976
}

@article{de2023mathematical,
  title={Mathematical Optimization meets Machine Learning: A survey on Matheuristics},
  author={De Santis, Marianna and Grani, Giorgio and Palagi, Laura},
  journal={European Journal of Operational Research},
  volume={304},
  number={2},
  pages={385--400},
  year={2023},
  publisher={Elsevier}
}
@article{uriel2004approx,
author = {Feige, Uriel},
title = {Approximating Maximum Clique by Removing Subgraphs},
journal = {SIAM Journal on Discrete Mathematics},
volume = {18},
number = {2},
pages = {219-225},
year = {2004},
doi = {10.1137/S089548010240415X},

URL = { 
    
        https://doi.org/10.1137/S089548010240415X
    
    

},
eprint = { 
    
        https://doi.org/10.1137/S089548010240415X
    
    

}
,
    abstract = { We show an algorithm that finds cliques of size (log n/log log n)2 whenever a graph has a clique of size at least n/(log n)b for an arbitrary constant b. This leads to an algorithm that approximates max clique within a factor of O(n(log log n)2/(log n)3), which matches the best approximation ratio known for the chromatic number. The previously best approximation ratio known for max clique was O(n/(log n)2). }
}


@article{berman1994approximating,
  title={On the complexity of approximating the independent set problem},
  author={Berman, Piotr and Schnitger, Georg},
  journal={Information and Computation},
  volume={96},
  number={1},
  pages={77--94},
  year={1992},
  publisher={Elsevier}
}

@article{feige2004approximating,
  title={Approximating maximum clique by removing subgraphs},
  author={Feige, Uriel},
  journal={SIAM Journal on Discrete Mathematics},
  volume={18},
  number={2},
  pages={219--225},
  year={2004},
  publisher={SIAM}
}
@article{quintas1965on,
author = {L. V. Quintas and Fred Supnick},
title = {On Some Properties of Shortest Hamiltonian Circuits},
journal = {The American Mathematical Monthly},
volume = {72},
number = {9},
pages = {977--980},
year = {1965},
publisher = {Taylor \& Francis},
doi = {10.1080/00029890.1965.11970655},


URL = { 
    
        https://doi.org/10.1080/00029890.1965.11970655
    
    

},
eprint = { 
    
        https://doi.org/10.1080/00029890.1965.11970655
    
    

}

}


@article{dinur2005hardness,
  title={On the hardness of approximating minimum vertex cover},
  author={Dinur, Irit and Safra, Samuel},
  journal={Annals of mathematics},
  pages={439--485},
  year={2005},
  publisher={JSTOR}
}
@article{zhang2000linear,
title = {Linear time-approximation algorithms for bin packing},
journal = {Operations Research Letters},
volume = {26},
number = {5},
pages = {217-222},
year = {2000},
issn = {0167-6377},
doi = {https://doi.org/10.1016/S0167-6377(99)00077-2},
url = {https://www.sciencedirect.com/science/article/pii/S0167637799000772},
author = {Guochuan Zhang and Xiaoqiang Cai and C.K. Wong},
keywords = {Bin packing, Absolute worst-case ratio, Linear time algorithm},
abstract = {Simchi-Levi (Naval Res. Logist. 41 (1994) 579–585) proved that the famous bin packing algorithms FF and BF have an absolute worst-case ratio of no more than 74, and FFD and BFD have an absolute worst-case ratio of 32, respectively. These algorithms run in time O(nlogn). In this paper, we provide a linear time constant space (number of bins kept during the execution of the algorithm is constant) off-line approximation algorithms with absolute worst-case ratio 32. This result is best possible unless P=NP. Furthermore, we present a linear time constant space on-line algorithm and prove that the absolute worst-case ratio is 74.}
}

@article{shi2019approx,
   title={Approximation algorithm for the partial set multi-cover problem},
   volume={75},
   ISSN={1573-2916},
   url={http://dx.doi.org/10.1007/s10898-019-00804-y},
   DOI={10.1007/s10898-019-00804-y},
   number={4},
   journal={Journal of Global Optimization},
   publisher={Springer Science and Business Media LLC},
   author={Shi, Yishuo and Ran, Yingli and Zhang, Zhao and Willson, James and Tong, Guangmo and Du, Ding-Zhu},
   year={2019},
   month=jul, pages={1133–1146} }

@article{karakostas2009better,
  title={A better approximation ratio for the vertex cover problem},
  author={Karakostas, George},
  journal={ACM Transactions on Algorithms (TALG)},
  volume={5},
  number={4},
  pages={1--8},
  year={2009},
  publisher={ACM New York, NY, USA}
}
@inproceedings{chalermsook2023polynomial,
title = "Polynomial-Time Approximation of Independent Set Parameterized by Treewidth",
abstract = "We prove the following result about approximating the maximum independent set in a graph. Informally, we show that any approximation algorithm with a “non-trivial” approximation ratio (as a function of the number of vertices of the input graph G) can be turned into an approximation algorithm achieving almost the same ratio, albeit as a function of the treewidth of G. More formally, we prove that for any function f, the existence of a polynomial time (n/f(n))-approximation algorithm yields the existence of a polynomial time O(tw · log f(tw)/f(tw))-approximation algorithm, where n and tw denote the number of vertices and the width of a given tree decomposition of the input graph. By pipelining our result with the state-of-the-art O(n · (log log n)2 / log3 n)-approximation algorithm by Feige (2004), this implies an O(tw · (log log tw)3 / log3 tw)-approximation algorithm.",
keywords = "Approximation Algorithms, Maximum Independent Set, Parameterized Approximation, Treewidth",
author = "Parinya Chalermsook and Fedor Fomin and Thekla Hamm and Tuukka Korhonen and Jesper Nederlof and Ly Orgo",
year = "2023",
month = sep,
doi = "10.4230/LIPIcs.ESA.2023.33",
language = "English",
series = "Leibniz International Proceedings in Informatics, LIPIcs",
publisher = "Schloss Dagstuhl - Leibniz-Zentrum f{\"u}r Informatik",
pages = "1--13",
booktitle = "31st Annual European Symposium on Algorithms, ESA 2023",
address = "Germany",

}


@inproceedings{karmarkar1982efficient,
  title={An efficient approximation scheme for the one-dimensional bin-packing problem},
  author={Karmarkar, Narendra and Karp, Richard M},
  booktitle={23rd annual symposium on foundations of computer science (sfcs 1982)},
  pages={312--320},
  year={1982},
  organization={IEEE}
}

@article{de1981bin,
  title={Bin packing can be solved within 1+$\epsilon$ in linear time},
  author={De La Vega, Wenceslas Fernandez and Lueker, George S},
  journal={Combinatorica},
  volume={1},
  number={4},
  pages={349--355},
  year={1981},
  publisher={Springer}
}
@article{papadimitriou1977euclidean,
title={The Euclidean travelling salesman problem is NP-complete},
author={Papadimitriou, Christos H},
journal={Theoretical computer science},
volume={4},
number={3},
pages={237--244},
year={1977},
publisher={Elsevier}
}


@article{doi:10.1137/0210017,
author = {Katoh, N. and Ibaraki, T. and Mine, H.},
title = {An Algorithm for Finding K Minimum Spanning Trees},
journal = {SIAM Journal on Computing},
volume = {10},
number = {2},
pages = {247-255},
year = {1981},
doi = {10.1137/0210017},

URL = { 
    
        https://doi.org/10.1137/0210017
    
    

},
eprint = { 
    
        https://doi.org/10.1137/0210017
    
    

}
,
    abstract = { This paper presents an algorithm for finding K minimum spanning trees in an undirected graph. The required time is $O(Km + \min (n^2 ,m\log \log n))$ and the space is $O(K + m)$, where n is the number of vertices and m is the number of edges. The algorithm is based on three subroutines. The first two subroutines are used to obtain the second minimum spanning tree in $O(\min (n^2 ,m\alpha (m,n))) $ steps, where  $\alpha (m,n) $ is Tarjan’s inverse of Ackermann’s function [12] which is very slowly growing. The third one obtains the kth minimum spanning tree in  $O(m) $ steps when the jth minimum spanning trees for  $j = 1,2, \cdots ,k - 1 $ are given. }
}

@article{ravi1996spanning,
author = {Ravi, R. and Sundaram, R. and Marathe, M. V. and Rosenkrantz, D. J. and Ravi, S. S.},
title = {Spanning Trees—Short or Small},
journal = {SIAM Journal on Discrete Mathematics},
volume = {9},
number = {2},
pages = {178-200},
year = {1996},
doi = {10.1137/S0895480194266331},

URL = { 
    
        https://doi.org/10.1137/S0895480194266331
    
    

},
eprint = { 
    
        https://doi.org/10.1137/S0895480194266331
    
    

}
,
    abstract = { We study the problem of finding small trees. Classical network design problems are considered with the additional constraint that only a specified number k of nodes are required to be connected in the solution. A prototypical example is the kMST problem in which we require a tree of minimum weight spanning at least k nodes in an edge-weighted graph. We show that the kMST problem is NP-hard even for points in the Euclidean plane. We provide approximation algorithms with performance ratio \$2\sqrt{k} \$ for the general edge-weighted case and \$O(k^{1/4} )\$ for the case of points in the plane. Polynomial-time exact solutions are also presented for the class of treewidth-bounded graphs, which includes trees, series-parallel graphs, and bounded bandwidth graphs, and for points on the boundary of a convex region in the Euclidean plane.We also investigate the problem of finding short trees and, more generally, that of finding networks with minimum diameter. A simple technique is used to provide a polynomial-time solution for finding k-trees of minimum diameter. We identify easy and hard problems arising in finding short networks using a framework due to T. C. Hu. }
}


@article{eppstein1997finding,
author = {Eppstein, David},
title = {Finding the $k$ Shortest Paths},
journal = {SIAM Journal on Computing},
volume = {28},
number = {2},
pages = {652-673},
year = {1998},
doi = {10.1137/S0097539795290477},

URL = { 
    
        https://doi.org/10.1137/S0097539795290477
    
    

},
eprint = { 
    
        https://doi.org/10.1137/S0097539795290477
    
    

}
,
    abstract = { We give algorithms for finding the $k$ shortest paths (not required to be simple) connecting a pair of vertices in a digraph. Our algorithms output an implicit representation of these paths in a digraph with n vertices and m edges, in time O(m + n log n + k). We can also find the k shortest paths from a given source s to each vertex in the graph, in total time O(m + n log n + kn). We describe applications to dynamic programming problems including the knapsack problem, sequence alignment, maximum inscribed polygons, and genealogical relationship discovery. }
}

@article{doi:10.1137/0215009,
author = {Galil, Zvi and Micali, Silvio and Gabow, Harold},
title = {An $O(EV\log V)$ Algorithm for Finding a Maximal Weighted Matching in General Graphs},
journal = {SIAM Journal on Computing},
volume = {15},
number = {1},
pages = {120-130},
year = {1986},
doi = {10.1137/0215009},

URL = { 
    
        https://doi.org/10.1137/0215009
    
    

},
eprint = { 
    
        https://doi.org/10.1137/0215009
    
    

}
,
    abstract = { We define two generalized types of a priority queue by allowing some forms of changing the priorities of the elements in the queue. We show that they can be implemented efficiently. Consequently, each operation takes $O(\log n)$ time. We use these generalized priority queues to construct an $O(EV\log V)$ algorithm for finding a maximal weighted matching in general graphs. }
}
@article{kalyanmoy2006in,
    author = {Deb, Kalyanmoy and Gupta, Himanshu},
    title = "{Introducing Robustness in Multi-Objective Optimization}",
    journal = {Evolutionary Computation},
    volume = {14},
    number = {4},
    pages = {463-494},
    year = {2006},
    month = {12},
    abstract = "{In optimization studies including multi-objective optimization, the main focus is placed on finding the global optimum or global Pareto-optimal solutions, representing the best possible objective values. However, in practice, users may not always be interested in finding the so-called global best solutions, particularly when these solutions are quite sensitive to the variable perturbations which cannot be avoided in practice. In such cases, practitioners are interested in finding the robust solutions which are less sensitive to small perturbations in variables. Although robust optimization is dealt with in detail in single-objective evolutionary optimization studies, in this paper, we present two different robust multi-objective optimization procedures, where the emphasis is to find a robust frontier, instead of the global Pareto-optimal frontier in a problem. The first procedure is a straightforward extension of a technique used for single-objective optimization and the second procedure is a more practical approach enabling a user to set the extent of robustness desired in a problem. To demonstrate the differences between global and robust multi-objective optimization principles and the differences between the two robust optimization procedures suggested here, we develop a number of constrained and unconstrained test problems having two and three objectives and show simulation results using an evolutionary multi-objective optimization (EMO) algorithm. Finally, we also apply both robust optimization methodologies to an engineering design problem.}",
    issn = {1063-6560},
    doi = {10.1162/evco.2006.14.4.463},
    url = {https://doi.org/10.1162/evco.2006.14.4.463},
    eprint = {https://direct.mit.edu/evco/article-pdf/14/4/463/1493698/evco.2006.14.4.463.pdf},
}




@misc{kurtz2023approximation,
      title={Approximation Algorithms for Min-max-min Robust Optimization and K-Adaptability under Objective Uncertainty}, 
      author={Jannis Kurtz},
      year={2023},
      eprint={2106.03107},
      archivePrefix={arXiv},
      primaryClass={math.OC}
}

@article{VANDERPOORT1999409,
title = {Solving the k-best traveling salesman problem},
journal = {Computers \& Operations Research},
volume = {26},
number = {4},
pages = {409-425},
year = {1999},
issn = {0305-0548},
doi = {https://doi.org/10.1016/S0305-0548(98)00070-7},
url = {https://www.sciencedirect.com/science/article/pii/S0305054898000707},
author = {Edo S {van der Poort} and Marek Libura and Gerard Sierksma and Jack A.A {van der Veen}},
abstract = {Although k-best solutions for polynomial solvable problems are extensively studied in the literature not much is known for NP-hard problems. In this paper we design algorithms for finding sets of k-best solutions to the Traveling Salesman Problem (TSP) for some positive integer k. It will be shown that a set of k-best Hamiltonian tours in a weighted graph can be determined by applying the so-called partitioning algorithms and by algorithms based on modifications of solution methods like branch-and-bound. In order to study the effectiveness of these algorithms the time for determining a set of k-best solutions is investigated for a number of instances in Reinelt’s TSPLIB library. It appears that the time required to find a set of k-best tours grows rather slowly in k. Furthermore the results of numerical experiments show that the difference in length between a longest and a shortest tour in the set of k-best solutions grows only slowly in k and that also the ‘structure’ of the tours in the set of k-best tours is quite robust. Scope and purpose After having solved an optimization problem, it is often the case that one still must verify whether the optimal solution satisfies some additional restrictions that are not included in the original model. Such conditions are called “subtle conditions”. In the case of subtle conditions, it is particularly of interest to have a set of k-best solutions in order to see which of the solutions in that set satisfy the extra conditions and how high the “price” is for incorporating such conditions. Algorithms for finding sets of k-best solutions have mainly been studied in the literature for polynomially solvable combinatorial optimization problems. Little is known on algorithms for finding k-best solutions for NP-hard combinatorial optimization problems. In this paper, we study algorithms for finding k-best solutions for one of the most notorious NP-hard problems, namely the Traveling Salesman Problem (TSP). Properties of the sets of k-best solutions for the TSP, such as the increase in tour length and the number of edges that the k-best solutions have in common or differ in, are discussed in detail.}
}
@article{arora1998polynomial,
author = {Arora, Sanjeev},
title = {Polynomial time approximation schemes for Euclidean traveling salesman and other geometric problems},
year = {1998},
issue_date = {Sept. 1998},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {45},
number = {5},
issn = {0004-5411},
url = {https://doi.org/10.1145/290179.290180},
doi = {10.1145/290179.290180},
abstract = {We present a polynomial time approximation scheme for Euclidean TSP in fixed dimensions. For every fixed c > 1 and given any n nodes in ℛ2, a randomized version of the scheme finds a (1 + 1/c)-approximation to the optimum traveling salesman tour in O(n(log n)O(c)) time. When the nodes are in ℛd, the running time increases to O(n(log n)(O(√c))d-1). For every fixed c,  d the running time is n · poly(logn), that is nearly linear in n. The algorithmm can be derandomized, but this increases the running time by a factor O(nd). The previous best approximation algorithm for the problem (due to Christofides) achieves a 3/2-aproximation in polynomial time.We also give similar approximation schemes for some other NP-hard Euclidean problems: Minimum Steiner Tree, k-TSP, and k-MST. (The running times of the algorithm for k-TSP and k-MST involve an additional multiplicative factor k.) The previous best approximation algorithms for all these problems  achieved a constant-factor approximation. We also give efficient approximation schemes for Euclidean Min-Cost Matching, a problem that can be solved exactly in polynomial time.All our algorithms also work, with almost no modification, when distance is measured using any geometric norm (such as ℓp for p ≥ 1 or other Minkowski norms). They also have simple parallel (i.e., NC) implementations.},
journal = {J. ACM},
month = {sep},
pages = {753–782},
numpages = {30},
keywords = {Steiner problem, approximation algorithms, matching, network design, traveling salesman problem}
}
@article{nphard,
author = {Papadimitriou, Christos and Steiglitz, Kenneth},
year = {1977},
month = {03},
pages = {76-83},
title = {On the Complexity of Local Search for the Traveling Salesman Problem},
volume = {6},
journal = {SIAM J. Comput.},
doi = {10.1137/0206005}
}

@article{JONKER1983161,
title = {Transforming asymmetric into symmetric traveling salesman problems},
journal = {Operations Research Letters},
volume = {2},
number = {4},
pages = {161-163},
year = {1983},
issn = {0167-6377},
doi = {https://doi.org/10.1016/0167-6377(83)90048-2},
url = {https://www.sciencedirect.com/science/article/pii/0167637783900482},
author = {Roy Jonker and Ton Volgenant},
keywords = {Traveling salesman problem},
abstract = {We describe how to transform an asymmetric traveling salesman problem into a symmetric one at the cost of almost doubled problem size. Use and consequences are discussed shortly.}
}
@phdthesis{rothe1988two,
title = {Two solvable cases of the Traveling Salesman Problem},
year = {1988},
url = {https://page.mi.fu-berlin.de/rote/Papers/pdf/Two+solvable+cases+of+the+traveling+salesman+problem.pdf},
school = {Graz University of Technology},
author = {Rothe, G\"uther},
type={{PhD} Dissertation},
keywords = {Traveling salesman problem},
}

@article{lawler,
 ISSN = {00251909, 15265501},
 URL = {http://www.jstor.org/stable/2629357},
 abstract = {A general procedure is presented for computing the best, 2nd best, ⋯, Kth best solutions to a given discrete optimization problem. If the number of computational steps required to find an optimal solution to a problem with n(0, 1) variables is c(n), then the amount of computation required to obtain the K best solutions is O(Knc(n)). The procedure specializes to published procedures of Murty and of Yen for the assignment problem and the shortest path problem, respectively. A method is presented for reducing the required amount of storage by a factor of n, compared with the algorithms of Murty and of Yen. It is shown how the K shortest (loopless) paths in an n-node network with positive and negative arcs can be computed with an amount of computation which is O(Kn3). This represents an improvement by a factor of n, compared with Yen's algorithm.},
 author = {Eugene L. Lawler},
 journal = {Management Science},
 number = {7},
 pages = {401--405},
 publisher = {INFORMS},
 title = {A Procedure for Computing the K Best Solutions to Discrete Optimization Problems and Its Application to the Shortest Path Problem},
 urldate = {2023-05-14},
 volume = {18},
 year = {1972}
}
@InProceedings{10.1007/978-3-030-83508-8_2,
author="Akitaya, Hugo A.
and Biniaz, Ahmad
and Bose, Prosenjit
and De Carufel, Jean-Lou
and Maheshwari, Anil
and da Silveira, Lu{\'i}s Fernando Schultz Xavier
and Smid, Michiel",
editor="Lubiw, Anna
and Salavatipour, Mohammad
and He, Meng",
title="The Minimum Moving Spanning Tree Problem",
booktitle="Algorithms and Data Structures",
year="2021",
publisher="Springer International Publishing",
address="Cham",
pages="15--28",
abstract="We investigate the problem of finding a spanning tree of a set of moving points in the plane that minimizes the maximum total weight (sum of Euclidean distances between edge endpoints) or the maximum bottleneck throughout the motion. The output is a single tree, i.e., it does not change combinatorially during the movement of the points. We call these trees the minimum moving spanning tree, and the minimum bottleneck moving spanning tree, respectively. We show that, although finding the minimum bottleneck moving spanning tree can be done in {\$}{\$}O(n^2){\$}{\$}O(n2)time, it is NP-hard to compute the minimum moving spanning tree. We provide a simple {\$}{\$}O(n^2){\$}{\$}O(n2)-time 2-approximation and a {\$}{\$}O(n {\backslash}log n){\$}{\$}O(nlogn)-time {\$}{\$}(2+{\backslash}varepsilon ){\$}{\$}(2+$\epsilon$)-approximation for the latter problem.",
isbn="978-3-030-83508-8"
}
@article{DBLP:journals/corr/abs-2105-11250,
  author       = {Biswajit Sanyal and
                  Subhashis Majumder and
                  Priya Ranjan Sinha Mahapatra},
  title        = {Efficient Reporting of Top-$k$ Subset Sums},
  journal      = {CoRR},
  volume       = {abs/2105.11250},
  year         = {2021},
  url          = {https://arxiv.org/abs/2105.11250},
  eprinttype    = {arXiv},
  eprint       = {2105.11250},
  timestamp    = {Tue, 01 Jun 2021 18:07:59 +0200},
  biburl       = {https://dblp.org/rec/journals/corr/abs-2105-11250.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@article{RICE1998299,
title = {Continuous algorithms},
journal = {Topology and its Applications},
volume = {85},
number = {1},
pages = {299-318},
year = {1998},
note = {Invited Papers of the 8th Prague Topological Symposium on General Topology and its Relations to Modern Analysis and Algebra},
issn = {0166-8641},
doi = {https://doi.org/10.1016/S0166-8641(97)00155-7},
url = {https://www.sciencedirect.com/science/article/pii/S0166864197001557},
author = {Michael D. Rice},
keywords = {Algorithm, Continuous, Determines sorting, Edge-compatible, Euclidean space, In-place, Lipschitz, Order-statistic, Permutation, Sorting},
abstract = {The established connections between topology and computer science generally involve the interplay of order-theoretic ideas and nonclassical topological spaces with weak separation properties. This paper investigates the assumption of continuity with respect to Euclidean topologies for mappings satisfying the restriction that the output data is a rearrangement of some subset of the input data. In particular, algorithms for sorting and computing order-statistics define continuous mappings with this property. We establish the following results about this special class of mappings. First, each mapping satisfies a Lipschitz condition. Second, there are only finitely many such mappings. Third, the subsets of Euclidean spaces that uniquely determine the mappings based on sorting or computing certain order-statistics are characterized. As a consequence, we obtain a topological generalization of the 0–1 Sorting Lemma and a new necessary condition stating that the no proper subset of the nonconstant binary sequences determines sorting.}
}